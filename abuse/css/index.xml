<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSS on XS-Leaks Wiki</title><link>https://xsleaks.dev/abuse/css/</link><description>Recent content in CSS on XS-Leaks Wiki</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 10 May 2025 00:10:20 +0200</lastBuildDate><atom:link href="https://xsleaks.dev/abuse/css/index.xml" rel="self" type="application/rss+xml"/><item><title>CSS Tricks</title><link>https://xsleaks.dev/docs/attacks/css-tricks/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/css-tricks/</guid><description>&lt;h2 id="css-tricks">
 CSS Tricks
 &lt;a class="anchor" href="#css-tricks">#&lt;/a>
&lt;/h2>
&lt;p>CSS can be used to trick a user into exposing information such as embedded pixel values by making visual changes that are affected by the embed.&lt;/p>
&lt;h2 id="retrieving-users-history">
 Retrieving user&amp;rsquo;s history
 &lt;a class="anchor" href="#retrieving-users-history">#&lt;/a>
&lt;/h2>
&lt;p>Using the CSS &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:visited">&lt;code>:visited&lt;/code>&lt;/a> selector, itâ€™s possible to apply a different style for URLs that have been visited.&lt;br>
Previously it was possible to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle">&lt;code>getComputedStyle()&lt;/code>&lt;/a> to detect this difference, but now browsers prevent this by always returning values as if the link was visited and limiting what styles can be applied using the selector. &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;br>
So, it may be needed to trick the user into clicking an area that the CSS has affected.
This can be done using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode">&lt;code>mix-blend-mode&lt;/code>&lt;/a>. &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;br>
There are also ways to do it without user interaction such as by abusing render timings.
This works because it takes time to paint links in a different color. &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;br>
A Proof of Concept to this attack can be found in a Chromium report &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup> and it works by having multiple links to increase the time difference.&lt;/p></description></item><item><title>CSS Injection</title><link>https://xsleaks.dev/docs/attacks/css-injection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/css-injection/</guid><description>&lt;h2 id="css-injection">
 CSS Injection
 &lt;a class="anchor" href="#css-injection">#&lt;/a>
&lt;/h2>

 &lt;blockquote class="book-hint2 warning">
 &lt;p class="hint-title warning">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#warning-notice">&lt;/use>
 &lt;/svg>&lt;span>warning&lt;/span>&lt;/p>
 This group of XS-Leaks requires a CSS injection on the target page.
 &lt;/blockquote>


&lt;p>Among the different CSS injection vectors, the most noticeable one is the abuse of CSS Selectors. They can be used as an expression to match and select certain HTML elements. For example, the selector &lt;code>input[value^=&amp;quot;a&amp;quot;]&lt;/code> is matched if the value of an &lt;code>input&lt;/code> tag starts with the character &amp;ldquo;a&amp;rdquo;. So, to detect if a CSS Selector matches the expression, attackers can trigger a callback to one of their websites using certain properties like &lt;code>background&lt;/code>, &lt;code>@import&lt;/code>, etc. &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. The matching process can easily be brute-forced, and extended to the full string.&lt;/p></description></item></channel></rss>