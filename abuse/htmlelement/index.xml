<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Abuse/HTMLElement on XS-Leaks Wiki</title><link>https://xsleaks.dev/abuse/htmlelement/</link><description>Recent content in Abuse/HTMLElement on XS-Leaks Wiki</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://xsleaks.dev/abuse/htmlelement/index.xml" rel="self" type="application/rss+xml"/><item><title>Element leaks</title><link>https://xsleaks.dev/docs/attacks/element-leaks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/element-leaks/</guid><description>&lt;p>Some HTML Elements might be used to leak a portion of data to a cross-origin page.
For example, the below media resources can leak information about its size, duration, type.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement">HTMLMediaElement&lt;/a> leaks the media &lt;code>duration&lt;/code> and the &lt;code>buffered&lt;/code> times. &lt;a href="https://xsinator.com/testing.html#Media%20Duration%20Leak">Run demo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement">HTMLVideoElement&lt;/a> leaks the &lt;code>videoHeight&lt;/code> and &lt;code>videoWidth&lt;/code>
some browsers may also have &lt;code>webkitVideoDecodedByteCount&lt;/code>, &lt;code>webkitAudioDecodedByteCount&lt;/code> and &lt;code>webkitDecodedFrameCount&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/VideoPlaybackQuality">getVideoPlaybackQuality()&lt;/a> leaks the &lt;code>totalVideoFrames&lt;/code>.&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement">HTMLImageElement&lt;/a> leaks the &lt;code>height&lt;/code> and &lt;code>width&lt;/code> but if the image is invalid they will be 0
and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode">&lt;code>image.decode()&lt;/code>&lt;/a> will get rejected. &lt;a href="https://xsinator.com/testing.html#Media%20Dimensions%20Leak">Run demo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s possible to differentiate between media types via unique property for a given media type. For example, it is &lt;code>videoWidth&lt;/code> for a &lt;code>&amp;lt;video&amp;gt;&lt;/code>, or &lt;code>duration&lt;/code> for an &lt;code>&amp;lt;audio&amp;gt;&lt;/code>. The below snippet shows an example code that returns the type of a resource.&lt;/p></description></item></channel></rss>