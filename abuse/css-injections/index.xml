<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Abuse/CSS Injections on XS-Leaks Wiki</title><link>https://xsleaks.dev/abuse/css-injections/</link><description>Recent content in Abuse/CSS Injections on XS-Leaks Wiki</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 10 May 2025 00:09:38 +0200</lastBuildDate><atom:link href="https://xsleaks.dev/abuse/css-injections/index.xml" rel="self" type="application/rss+xml"/><item><title>Execution Timing</title><link>https://xsleaks.dev/docs/attacks/timing-attacks/execution-timing/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/timing-attacks/execution-timing/</guid><description>&lt;p>Measuring the time of JavaScript execution in a browser can give attackers information on when certain events are triggered, and how long some operations take.&lt;/p>
&lt;h2 id="timing-the-event-loop">
 Timing the Event Loop
 &lt;a class="anchor" href="#timing-the-event-loop">#&lt;/a>
&lt;/h2>
&lt;p>JavaScript&amp;rsquo;s concurrency model is based on a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop">single-threaded event loop&lt;/a> which means it can only run one task at a time. If, for example, some time-consuming task blocks the event loop, the user can perceive a freeze on a page as a result of the UI thread being starved. Other tasks must wait until the blocking task finishes. Each browser implements different &lt;a href="https://chromium.googlesource.com/chromium/src/&amp;#43;/main/docs/process_model_and_site_isolation.md">process models&lt;/a>, which means some web sites might run in different threads (and event loops) depending on their relations.&lt;/p></description></item></channel></rss>