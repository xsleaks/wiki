<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Downloads on XS-Leaks Wiki</title><link>https://xsleaks.dev/abuse/downloads/</link><description>Recent content in Downloads on XS-Leaks Wiki</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 06 Jul 2024 23:25:01 +0200</lastBuildDate><atom:link href="https://xsleaks.dev/abuse/downloads/index.xml" rel="self" type="application/rss+xml"/><item><title>Navigations</title><link>https://xsleaks.dev/docs/attacks/navigations/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/navigations/</guid><description>&lt;p>Detecting if a cross-site page triggered a navigation (or didn&amp;rsquo;t) can be useful to an attacker. For example, a website may trigger a navigation in a certain endpoint &lt;a href="#case-scenarios">depending on the status of the user&lt;/a>.&lt;/p>
&lt;p>To detect if any kind of navigation occurred, an attacker can:&lt;/p>
&lt;ul>
&lt;li>Use an &lt;code>iframe&lt;/code> and count the number of times the &lt;code>onload&lt;/code> event is triggered.&lt;/li>
&lt;li>Check the value of &lt;code>history.length&lt;/code>, which is accessible through any window reference. This provides the number of entries in the history of a victim that were either changed by &lt;code>history.pushState&lt;/code> or by regular navigations. To get the value of &lt;code>history.length&lt;/code>, an attacker changes the location of the window reference to the target website, then changes back to same-origin, and finally reads the value. &lt;a href="https://xsinator.com/testing.html#History%20Length%20Leak">Run demo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="download-trigger">
 Download Trigger
 &lt;a class="anchor" href="#download-trigger">#&lt;/a>
&lt;/h2>
&lt;p>When an endpoint sets the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition">&lt;code>Content-Disposition: attachment&lt;/code>&lt;/a> header, it instructs the browser to download the response as an attachment instead of navigating to it. Detecting if this behavior occurred might allow attackers to leak private information if the outcome depends on the state of the victim&amp;rsquo;s account.&lt;/p></description></item><item><title>Download Bar</title><link>https://xsleaks.dev/docs/attacks/historical/download-bar/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/historical/download-bar/</guid><description>&lt;p>In Chromium-based browsers, when a file was downloaded, a preview of the download process appeared in a bar at the bottom, integrated into the browser window. By monitoring the window height, attackers could detect whether the &amp;ldquo;download bar&amp;rdquo; opened:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Read the current height of the window
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">var&lt;/span> screenHeight &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.innerHeight;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Load the page that may or may not trigger the download
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.open(&lt;span style="color:#f1fa8c">&amp;#39;https://example.org&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Wait for the tab to load
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// If the download bar appears, the height of all tabs will be smaller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (&lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.innerHeight &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> screenHeight) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#f1fa8c">&amp;#39;Download bar detected&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff79c6">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#f1fa8c">&amp;#39;Download bar not detected&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#bd93f9">2000&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;blockquote class="book-hint2 important">
 &lt;p class="hint-title important">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#important-notice">&lt;/use>
 &lt;/svg>&lt;span>important&lt;/span>&lt;/p></description></item></channel></rss>