<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Historical on XS-Leaks Wiki</title><link>https://xsleaks.dev/category/historical/</link><description>Recent content in Historical on XS-Leaks Wiki</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 23 Apr 2024 18:39:04 +0100</lastBuildDate><atom:link href="https://xsleaks.dev/category/historical/index.xml" rel="self" type="application/rss+xml"/><item><title>Download Bar</title><link>https://xsleaks.dev/docs/attacks/historical/download-bar/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/historical/download-bar/</guid><description>&lt;p>In Chromium-based browsers, when a file was downloaded, a preview of the download process appeared in a bar at the bottom, integrated into the browser window. By monitoring the window height, attackers could detect whether the &amp;ldquo;download bar&amp;rdquo; opened:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Read the current height of the window
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">var&lt;/span> screenHeight &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.innerHeight;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Load the page that may or may not trigger the download
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.open(&lt;span style="color:#f1fa8c">&amp;#39;https://example.org&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">// Wait for the tab to load
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span>setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// If the download bar appears, the height of all tabs will be smaller
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (&lt;span style="color:#8be9fd;font-style:italic">window&lt;/span>.innerHeight &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> screenHeight) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#f1fa8c">&amp;#39;Download bar detected&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff79c6">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#f1fa8c">&amp;#39;Download bar not detected&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#bd93f9">2000&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 &lt;blockquote class="book-hint2 important">
 &lt;p class="hint-title important">
 &lt;svg class="book-icon">
 &lt;use href="https://xsleaks.dev/svg/hint-icons.svg#important-notice">&lt;/use>
 &lt;/svg>&lt;span>important&lt;/span>&lt;/p></description></item><item><title>Content-Type</title><link>https://xsleaks.dev/docs/attacks/historical/content-type/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/historical/content-type/</guid><description>&lt;p>Leaking the Content-Type of a request would provide attackers with a new way of distinguishing two requests from each other.&lt;/p>
&lt;h2 id="typemustmatch">
 typeMustMatch
 &lt;a class="anchor" href="#typemustmatch">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/typeMustMatch">&lt;code>typeMustMatch&lt;/code>&lt;/a> is a Boolean that reflects the &lt;code>typeMustMatch&lt;/code> attribute of the &lt;code>object&lt;/code> element. It ensures that a certain MIME type must be enforced when loading an object, by verifying if the &lt;code>Content-Type&lt;/code> of the resource is the same as the one provided in the object. Unfortunately, this enforcement also allowed attackers to leak the &lt;code>Content-Type&lt;/code> and Status Codes returned by a website &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item><item><title>Stateful Browser Features</title><link>https://xsleaks.dev/docs/attacks/historical/stateful-browser-features/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://xsleaks.dev/docs/attacks/historical/stateful-browser-features/</guid><description>&lt;p>Some browser features/extensions change the way requests are processed, depending on certain website states generated by the browser. Attackers can sometimes observe the whole process and mess with the browser, triggering actions that produce side effects on those states.&lt;/p>
&lt;h2 id="webkit--itp">
 WebKit â€“ ITP
 &lt;a class="anchor" href="#webkit--itp">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://webkit.org/tracking-prevention/">Intelligent Tracking Prevention&lt;/a> (ITP) is a privacy feature which is part of &lt;a href="https://webkit.org/tracking-prevention/">WebKit Tracking Prevention technologies&lt;/a>. It&amp;rsquo;s a conjunction of several features and aims to prevent a website from tracking a user under a third-party context. Unfortunately, the initial design introduced a new XS-Leak &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, allowing attackers to abuse the states implicitly created by ITP to classify websites as trackers.&lt;/p></description></item></channel></rss>